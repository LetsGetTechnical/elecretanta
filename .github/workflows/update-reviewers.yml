name: Update PR Reviewers

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  update-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Remove all reviewers and add specific groups
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            if(!prNumber) {
              core.setFailed("Could not get PR number from context.");
              return;
            }

            // Small delay helps avoid race with CODEOWNERS auto-requests
            await new Promise(r => setTimeout(r, 3000));

            // Team slugs
            const desiredTeams = ['peer-code-reviewers', 'senior-code-reviewers']; 
            let reviewersToRemove = [];

            try {
              // Fetch the PR and user details
              const { data } = await github.rest.pulls.listRequestedReviewers({
                owner, repo, pull_number: prNumber
              });

              const existingTeamReviewers = data.team_reviewers.map(team => team.slug);

              // Check if the PR already has team reviewers
              if (existingTeamReviewers.length > 0) {
                core.info('PR already has team reviewers. Skipping script.');
                return;
              }

              // Extract users from the response.
              reviewersToRemove = data.users.map(user => user.login);

              core.info(`Found requested reviewers: ${reviewersToRemove.join(', ') || '(none)'}`);
            } catch (error) {
              console.error("Error fetching PR details:", error.message);
            }
            
            // Optional: Remove existing reviewers and teams (GitHub may auto-reassign CODEOWNERS)
            try {
              if (reviewersToRemove.length > 0 || desiredTeams.length > 0) {
                await github.rest.pulls.removeRequestedReviewers({
                  owner, repo, pull_number: prNumber,
                  reviewers: reviewersToRemove,
                  team_reviewers: desiredTeams
                });

                core.info('Removed all currently requested reviewers.');
              } else {
                core.info("No reviewers to remove.");
              }
            } catch (error) {
              console.error("Error occurred while removing reviewers or teams:", error.message);
            }

            // Adds teams to PR
            try {
              await github.rest.pulls.requestReviewers({
                owner, repo, pull_number: prNumber,
                team_reviewers: desiredTeams
              });

              core.info(`Requested review from teams: ${desiredTeams.join(', ')}`);
            } catch (error) {
              core.info('All desired teams already requested or error occured:', error.message);
            }