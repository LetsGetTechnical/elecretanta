name: Update PR Reviewers

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read  

jobs:
  update-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Remove all reviewers and add specific groups
        uses: actions/github-script@v7
        env:
          TEST_TOKEN: ${{ secrets.TEST_TOKEN }}
          SECRET_TOKEN: ${{ secrets.GH_PAT }}
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            console.log(`Updating reviewers for PR #${prNumber} in ${owner}/${repo}`);

            if (process.env.SECRET_TOKEN === null || process.env.SECRET_TOKEN === undefined || process.env.SECRET_TOKEN === "") {
              console.log("Token not fetched");
              } else {
                console.log("Token fetched successfully");
            }

            if (process.env.TEST_TOKEN === null || process.env.TEST_TOKEN === undefined || process.env.TEST_TOKEN === "") {
              console.log("TEST_TOKEN not fetched");
            } else {
              console.log(`TEST_TOKEN fetched: ${process.env.TEST_TOKEN}`);
            }

            try {
              // Fetch the PR details
              const prDetails = await github.rest.pulls.get({
                owner,
                repo,
                pull_number: prNumber
              });

              console.log("PR Details:", prDetails.data);
            } catch (error) {
              console.error("Error fetching PR details:", error.message);
            }
            

            // Optional: remove existing reviewers (GitHub may auto-reassign CODEOWNERS)
            try {
              await github.rest.pulls.removeRequestedReviewers({
                owner,
                repo,
                pull_number: prNumber,
                reviewers: [],
                team_reviewers: ['peer-code-reviewers', 'senior-code-reviewers'] // Replace with actual team slugs
              });
            } catch (error) {
              console.log("No reviewers to remove or error occurred:", error.message);
            }

            // Add specific teams as reviewers
            await github.rest.pulls.requestReviewers({
              owner,
              repo,
              pull_number: prNumber,
              team_reviewers: ['peer-code-reviewers', 'senior-code-reviewers'] // Replace with actual team slugs
            });
