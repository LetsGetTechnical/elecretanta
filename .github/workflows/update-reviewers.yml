name: Update PR Reviewers

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  pull-requests: write
  contents: read  

jobs:
  update-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Remove all reviewers and add specific groups
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Small delay helps avoid race with CODEOWNERS auto-requests
            await new Promise(r => setTimeout(r, 3000));

            let users = [];
            let teams = [];
            let data = {};

            try {
              // Fetch the PR and user details
              data = await github.rest.pulls.listRequestedReviewers({
                owner, repo, pull_number: prNumber
              });

              users = data.users.map(u => u.login);
              teams = data.teams.map(t => t.slug);

              core.info(`Found requested users: ${users.join(', ') || '(none)'}`);
              core.info(`Found requested teams: ${teams.join(', ') || '(none)'}`);
            } catch (error) {
              console.error("Error fetching PR details:", error.message);
            }
            
            // Optional: remove existing reviewers (GitHub may auto-reassign CODEOWNERS)
            try {
              if (users.length || teams.length) {
                await github.rest.pulls.removeRequestedReviewers({
                  owner, repo, pull_number: prNumber,
                  reviewers: users,
                  team_reviewers: teams
                });

                core.info('Removed all currently requested reviewers.');
              } 
            } catch (error) {
              console.log("No requested reviewers to remove or error occurred:", error.message);
            }

            // Team slugs
            const desiredTeams = ['peer-code-reviewers', 'senior-code-reviewers']; 

            // Check what is currently requested to avoid 422 errors
            const currentTeams = data.teams.map(t => t.slug);
            const toAdd = desiredTeams.filter(s => !currentTeams.includes(s));

            // Adds teams to PR
            try {
              await github.rest.pulls.requestReviewers({
                owner, repo, pull_number: prNumber,
                team_reviewers: toAdd
              });

              core.info(`Requested review from teams: ${toAdd.join(', ')}`);
            } catch (error) {
              core.info('All desired teams already requested or error occured:', error.message);
            }